services:
  app:
    build:
      context: .
      dockerfile: dockerfile.app
    develop:
      watch:
        - action: rebuild
          path: ./package.json
    volumes:
      - ./src:/app/src
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy

  pg:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${PG_USER} -d ${PG_DB}']
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 15s
      start_interval: 3s

  redis:
    image: redis:7-alpine
    environment:
      - REDIS_HOST=${REDIS_HOST}
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 15s
      start_interval: 3s

volumes:
  pg_data:
